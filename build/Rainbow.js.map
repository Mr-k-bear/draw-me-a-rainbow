{"version":3,"file":"Rainbow.js","sources":["../node_modules/@juggle/resize-observer/lib/utils/resizeObservers.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverBoxOptions.js","../node_modules/@juggle/resize-observer/lib/utils/freeze.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverSize.js","../node_modules/@juggle/resize-observer/lib/DOMRectReadOnly.js","../node_modules/@juggle/resize-observer/lib/utils/element.js","../node_modules/@juggle/resize-observer/lib/utils/global.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateBoxSize.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverEntry.js","../node_modules/@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js","../node_modules/@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js","../node_modules/@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js","../node_modules/@juggle/resize-observer/lib/utils/process.js","../node_modules/@juggle/resize-observer/lib/utils/queueMicroTask.js","../node_modules/@juggle/resize-observer/lib/utils/queueResizeObserver.js","../node_modules/@juggle/resize-observer/lib/utils/scheduler.js","../node_modules/@juggle/resize-observer/lib/ResizeObservation.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverDetail.js","../node_modules/@juggle/resize-observer/lib/ResizeObserverController.js","../node_modules/@juggle/resize-observer/lib/ResizeObserver.js","../source/core/GLCanvas.ts","../source/core/GLProgram.ts","../node_modules/gl-matrix/esm/common.js","../node_modules/gl-matrix/esm/mat4.js","../node_modules/gl-matrix/esm/vec3.js","../node_modules/gl-matrix/esm/vec2.js","../source/core/Camera.ts","../node_modules/stats.js/src/Stats.js","../source/core/Clock.ts","../source/core/GLRenderer.ts","../source/shader/BasicShader.ts","../source/object/TestAxis.ts","../source/object/TestBox.ts","../source/utils/SmoothTool.ts","../source/object/Planet.ts"],"sourcesContent":["var resizeObservers = [];\nexport { resizeObservers };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n","var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n","var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n","export var freeze = function (obj) { return Object.freeze(obj); };\n","import { freeze } from './utils/freeze';\nvar ResizeObserverSize = (function () {\n    function ResizeObserverSize(inlineSize, blockSize) {\n        this.inlineSize = inlineSize;\n        this.blockSize = blockSize;\n        freeze(this);\n    }\n    return ResizeObserverSize;\n}());\nexport { ResizeObserverSize };\n","import { freeze } from './utils/freeze';\nvar DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return freeze(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n","var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a, _b;\n    if (obj instanceof Element) {\n        return true;\n    }\n    var scope = (_b = (_a = obj) === null || _a === void 0 ? void 0 : _a.ownerDocument) === null || _b === void 0 ? void 0 : _b.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isElement, isReplacedElement };\n","export var global = typeof window !== 'undefined' ? window : {};\n","import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n","import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nimport { freeze } from './utils/freeze';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = freeze([boxes.borderBoxSize]);\n        this.contentBoxSize = freeze([boxes.contentBoxSize]);\n        this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n","import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n","import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n","import { hasActiveObservations } from '../algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from '../algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from '../algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from '../algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from '../algorithms/gatherActiveObservationsAtDepth';\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nexport { process };\n","var trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\" + (toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\nexport { queueMicroTask };\n","import { queueMicroTask } from './queueMicroTask';\nvar queueResizeObserver = function (cb) {\n    queueMicroTask(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\nexport { queueResizeObserver };\n","import { process } from './process';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        queueResizeObserver(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nexport { scheduler, updateCount };\n","import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n","var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n","import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && resizeObservers.push(detail);\n            detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n            updateCount(1);\n            scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            updateCount(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController };\n","import { ResizeObserverController } from './ResizeObserverController';\nimport { isElement } from './utils/element';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\nexport { ResizeObserver };\n","import { EventEmitter } from \"events\";\r\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer';\r\n\r\nexport { GLCanvas, GLCanvasOption};\r\n\r\n/**\r\n * GLCanvas 的设置\r\n */\r\ninterface GLCanvasOption {\r\n\r\n    /**\r\n     * 分辨率自适应\r\n     */\r\n    autoResize?: boolean;\r\n\r\n    /**\r\n     * 是否监听鼠标事件\r\n     */\r\n    mouseEvent?: boolean;\r\n\r\n    /**\r\n     * 调试时使用\r\n     * 打印事件\r\n     */\r\n    eventLog?: boolean\r\n}\r\n\r\n/**\r\n * 封装 GLCanvas\r\n * 管理封装画布的功能属性\r\n * 监听画布事件\r\n * \r\n * @event resize 画布缓冲区大小改变\r\n * @event mousemove 鼠标移动\r\n * @event mouseup 鼠标抬起\r\n * @event mousedown 鼠标按下\r\n */\r\nclass GLCanvas extends EventEmitter {\r\n\r\n    /**\r\n     * HTML节点\r\n     */\r\n    private readonly canvas:HTMLCanvasElement;\r\n    private readonly div:HTMLDivElement;\r\n\r\n    /**\r\n     * 获取节点\r\n     */\r\n    public get dom(){\r\n        return this.div;\r\n    }\r\n\r\n    public get can(){\r\n        return this.canvas;\r\n    }\r\n\r\n    /**\r\n     * 像素分辨率\r\n     */\r\n    public pixelRatio:number = devicePixelRatio ?? 1;\r\n\r\n    /**\r\n     * 帧缓冲区宽度\r\n     */\r\n    public get width():number {\r\n        return this.canvas.width\r\n    }\r\n\r\n    /**\r\n     * 帧缓冲区高度\r\n     */\r\n    public get height():number {\r\n        return this.canvas.height\r\n    }\r\n\r\n    /**\r\n     * 画布宽度\r\n     */\r\n    public get offsetWidth():number {\r\n        return this.canvas.offsetWidth\r\n    }\r\n\r\n    /**\r\n     * 画布高度\r\n     */\r\n    public get offsetHeight():number {\r\n        return this.canvas.offsetHeight\r\n    }\r\n\r\n    /**\r\n     * 缩放 X\r\n     */\r\n    public get scaleX():number {\r\n        return this.canvas.width / this.canvas.offsetWidth\r\n    }\r\n\r\n    /**\r\n     * 缩放 Y\r\n     */\r\n    public get scaleY():number {\r\n        return this.canvas.height / this.canvas.offsetHeight\r\n    }\r\n    \r\n    /**\r\n     * 分辨率 (画布宽高比)\r\n     */\r\n    public get ratio():number {\r\n        return this.canvas.offsetWidth / this.canvas.offsetHeight;\r\n    }\r\n\r\n    /**\r\n     * 缓存判断是否要设置 canvas 大小\r\n     */\r\n    private readonly offsetFlg:[number,number] = [NaN, NaN];\r\n\r\n    /**\r\n     * 画布大小适应到 css 大小\r\n     */\r\n    public resize(){\r\n\r\n        if (\r\n            this.offsetWidth !== this.offsetFlg[0] || \r\n            this.offsetHeight !== this.offsetFlg[1]\r\n        ) {\r\n\r\n            // 缓存记录\r\n            this.offsetFlg[0] = this.offsetWidth;\r\n            this.offsetFlg[1] = this.offsetHeight;\r\n\r\n            // 重置缓冲区\r\n            this.canvas.width = this.offsetWidth * this.pixelRatio;\r\n            this.canvas.height = this.offsetHeight * this.pixelRatio;\r\n\r\n            this.emit(\"resize\", this);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 鼠标 X 坐标\r\n     */\r\n    public mouseX:number = 0;\r\n\r\n    /**\r\n     * 鼠标 Y 坐标\r\n     */\r\n    public mouseY:number = 0;\r\n \r\n    /**\r\n     * 鼠标相对 X 坐标\r\n     */\r\n    public mouseUvX:number = 0;\r\n \r\n    /**\r\n     * 鼠标相对 Y 坐标\r\n     */\r\n    public mouseUvY:number = 0;\r\n \r\n    /**\r\n     * 鼠标 GLX 坐标\r\n     */\r\n    public mouseGlX:number = 0;\r\n \r\n    /**\r\n     * 鼠标 GLY 坐标\r\n     */\r\n    public mouseGlY:number = 0;\r\n \r\n    /**\r\n     * 鼠标 X 变化量\r\n     */\r\n    public mouseMotionX:number = 0;\r\n \r\n    /**\r\n     * 鼠标 Y 变化量\r\n     */\r\n    public mouseMotionY:number = 0;\r\n\r\n    /**\r\n     * 缓存鼠标位置\r\n     */\r\n    private readonly mouseFlg:[number, number] = [NaN, NaN];\r\n\r\n    /**\r\n     * 保存鼠标数据\r\n     */\r\n    private calcMouseData(offsetX:number, offsetY:number):boolean {\r\n\r\n        if (\r\n            offsetX !== this.mouseFlg[0] || \r\n            offsetY !== this.mouseFlg[1]\r\n        ){\r\n            this.mouseX = offsetX;\r\n            this.mouseY = offsetY;\r\n\r\n            this.mouseUvX = offsetX / this.offsetWidth;\r\n            this.mouseUvY = offsetY / this.offsetHeight;\r\n            \r\n            this.mouseGlX = this.mouseUvX * 2 - 1;\r\n            this.mouseGlY = - this.mouseUvY * 2 + 1;\r\n            \r\n            this.mouseMotionX = offsetX - this.mouseFlg[0];\r\n            this.mouseMotionY = offsetY - this.mouseFlg[1];\r\n\r\n            this.mouseFlg[0] = offsetX;\r\n            this.mouseFlg[1] = offsetY;\r\n            \r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private calcMouseDataFromTouchEvent(e:TouchEvent){\r\n\r\n        if (e.touches.length <= 0) return;\r\n\r\n        let offsetX = e.touches[0].clientX - this.canvas.offsetLeft;\r\n        let offsetY = e.touches[0].clientY - this.canvas.offsetTop;\r\n\r\n        return this.calcMouseData(offsetX, offsetY);\r\n    }\r\n\r\n    /**\r\n     * 鼠标触摸触发计数\r\n     */\r\n    private touchCount:number = 0;\r\n\r\n    /**\r\n     * 鼠标是否按下\r\n     */\r\n    public mouseDown:boolean = false;\r\n\r\n    /**\r\n     * 检测 canvas 变化\r\n     */\r\n    private readonly obs:ResizeObserver = null;\r\n\r\n    /**\r\n     * 使用 canvas 节点创建\r\n     * 不适用节点则自动创建\r\n     * @param ele 使用的 canvas节点\r\n     * @param o 设置\r\n     */\r\n    public constructor(ele?:HTMLCanvasElement, o?:GLCanvasOption){\r\n\r\n        super();\r\n\r\n        let opt = o ?? {};\r\n\r\n        let autoResize = opt.autoResize ?? true;\r\n        let mouseEvent = opt.mouseEvent ?? true;\r\n        let eventLog = opt.eventLog ?? false;\r\n\r\n\r\n        // 获取/创建节点\r\n        this.canvas = ele ?? document.createElement(\"canvas\");\r\n        \r\n        this.div = document.createElement(\"div\");\r\n        this.div.appendChild(this.canvas);\r\n\r\n        this.canvas.style.width = \"100%\";\r\n        this.canvas.style.height = \"100%\";\r\n\r\n        if (autoResize){\r\n\r\n            // 创建观察者\r\n            this.obs = new (window.ResizeObserver || Polyfill)\r\n            ((entries:ResizeObserverEntry[])=>{\r\n\r\n                for (let entry of entries) {\r\n                    if(entry.target === this.canvas) this.resize();\r\n                }\r\n\r\n            });\r\n\r\n            // 大小监听\r\n            this.obs.observe(this.canvas);\r\n\r\n        }\r\n\r\n        if (mouseEvent) {\r\n\r\n            this.canvas.addEventListener(\"mouseup\",(e)=>{\r\n\r\n                if(this.touchCount >= 2) {\r\n                    this.touchCount = 0;\r\n                    return;\r\n                }\r\n\r\n                if (eventLog) console.log(\"GLCanvas: mouseup\");\r\n\r\n                this.mouseDown = false;\r\n                this.calcMouseData(e.offsetX, e.offsetY);\r\n                this.emit(\"mouseup\", this);\r\n\r\n            });\r\n\r\n            this.canvas.addEventListener(\"touchstart\",(e)=>{\r\n\r\n                this.touchCount = 1;\r\n\r\n                if (eventLog) console.log(\"GLCanvas: touchstart\");\r\n\r\n                this.mouseDown = true;\r\n                this.calcMouseDataFromTouchEvent(e);\r\n                this.emit(\"mousedown\", this);\r\n\r\n            });\r\n\r\n            this.canvas.addEventListener(\"mousedown\",(e)=>{\r\n\r\n                if(this.touchCount >= 2) return;\r\n\r\n                if (eventLog) console.log(\"GLCanvas: mousedown\");\r\n\r\n                this.mouseDown = true;\r\n                this.calcMouseData(e.offsetX, e.offsetY);\r\n                this.emit(\"mousedown\", this);\r\n\r\n            });\r\n\r\n            this.canvas.addEventListener(\"touchend\",(e)=>{\r\n                \r\n                this.touchCount ++;\r\n\r\n                if (eventLog) console.log(\"GLCanvas: touchend\");\r\n\r\n                this.mouseDown = false;\r\n                this.calcMouseDataFromTouchEvent(e);\r\n                this.emit(\"mouseup\", this);\r\n\r\n            });\r\n\r\n            this.canvas.addEventListener(\"mousemove\",(e)=>{\r\n\r\n                if(this.touchCount >= 2) return;\r\n\r\n                if (eventLog) console.log(\"GLCanvas: mousemove\");\r\n\r\n                if (this.calcMouseData(e.offsetX, e.offsetY)) this.emit(\"mousemove\", this);\r\n\r\n            });\r\n\r\n            this.canvas.addEventListener(\"touchmove\",(e)=>{\r\n\r\n                if (eventLog) console.log(\"GLCanvas: touchmove\");\r\n\r\n                if (this.calcMouseDataFromTouchEvent(e)) this.emit(\"mousemove\", this);\r\n\r\n            });\r\n\r\n        }\r\n        \r\n    }\r\n\r\n}","import * as T from \"./GLType\";\r\n\r\nexport {GLProgram};\r\n\r\n/**\r\n * Shader类\r\n */\r\nclass GLProgram {\r\n\r\n    /**\r\n     * shader 使用的上下文\r\n     */\r\n    protected gl:T.GLContex;\r\n\r\n    /**\r\n     * 顶点着色器源码\r\n     */\r\n    protected vertexShaderSource:string = \"\";\r\n\r\n    /**\r\n     * 片段着色器源代码\r\n     */\r\n    protected fragmentShaderSource:string = \"\";\r\n\r\n    /**\r\n     * 顶点着色器\r\n     */\r\n    protected vertexShader:WebGLShader;\r\n\r\n    /**\r\n     * 片段着色器\r\n     */\r\n    protected fragmentShader:WebGLShader;\r\n\r\n    /**\r\n     * 程序\r\n     */\r\n    protected program:WebGLProgram;\r\n\r\n    /**\r\n     * 设置源代码\r\n     */\r\n    protected setSource(vert:string, frag:string){\r\n\r\n        this.vertexShaderSource =\r\n            vert.replace(/^\\s+/, \"\");\r\n\r\n        this.fragmentShaderSource =\r\n            frag.replace(/^\\s+/, \"\");\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 编译\r\n     */\r\n    protected compile(){\r\n\r\n        // 创建程序\r\n        this.program = this.gl.createProgram();\r\n\r\n        // 创建顶点着色器\r\n        this.vertexShader = this.gl.createShader(this.gl.VERTEX_SHADER);\r\n\r\n        // 创建片段着色器\r\n        this.fragmentShader = this.gl.createShader(this.gl.FRAGMENT_SHADER);\r\n\r\n        // 绑定源代码\r\n        this.gl.shaderSource(this.vertexShader, this.vertexShaderSource);\r\n        this.gl.shaderSource(this.fragmentShader, this.fragmentShaderSource);\r\n\r\n        // 编译\r\n        this.gl.compileShader(this.vertexShader);\r\n        this.gl.compileShader(this.fragmentShader);\r\n\r\n        // 检测编译错误\r\n        if(!this.gl.getShaderParameter(this.vertexShader, this.gl.COMPILE_STATUS)){\r\n            console.error(\"vertex:\\r\\n\" + this.gl.getShaderInfoLog(this.vertexShader));\r\n        }\r\n\r\n        if(!this.gl.getShaderParameter(this.fragmentShader, this.gl.COMPILE_STATUS)){\r\n            console.error(\"fragment:\\r\\n\" + this.gl.getShaderInfoLog(this.fragmentShader));\r\n        }\r\n\r\n        // 附加到程序\r\n        this.gl.attachShader(this.program, this.vertexShader);\r\n        this.gl.attachShader(this.program, this.fragmentShader);\r\n\r\n        // 连接程序\r\n        this.gl.linkProgram(this.program);\r\n\r\n        // 检测链接错误\r\n        if(!this.gl.getProgramParameter(this.program, this.gl.LINK_STATUS)){\r\n            console.error(\"link:\\r\\n\" + this.gl.getProgramInfoLog(this.program));\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 创建编译 shader\r\n     */\r\n    public constructor(gl:T.GLContex){\r\n        this.gl = gl;\r\n        this.onload();\r\n    }\r\n\r\n    protected onload():void{};\r\n\r\n    /**\r\n     * attrib 位置缓存\r\n     */\r\n    private attribLocationCache:{[p:string]:GLint} = {};\r\n\r\n    /**\r\n     * attrib 位置缓存\r\n     */\r\n    private uniformLocationCache:{[p:string]:WebGLUniformLocation} = {};\r\n\r\n    /**\r\n     * 获取 attribLocation\r\n     */\r\n    public attribLocate(attr:string){\r\n\r\n        // 获取缓存\r\n        let cache:GLint = this.attribLocationCache[attr];\r\n\r\n        // 缓存搜索\r\n        if (cache === undefined || cache <= -1){\r\n\r\n            cache = this.gl.getAttribLocation(this.program, attr);\r\n\r\n            if (cache === undefined || cache <= -1) {\r\n                console.error(\"Attrib: can not get locate of \" + attr);\r\n            } else {\r\n                this.gl.enableVertexAttribArray(cache);\r\n            }\r\n            \r\n            this.attribLocationCache[attr] = cache;\r\n\r\n            return cache;\r\n        }\r\n\r\n        // 搜索到返回\r\n        else {\r\n            this.gl.enableVertexAttribArray(cache);\r\n            return cache\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * 获取 attribLocation\r\n     */\r\n    public uniformLocate(uni:string){\r\n\r\n        // 获取缓存\r\n        let cache:WebGLUniformLocation = this.uniformLocationCache[uni];\r\n\r\n        // 缓存搜索\r\n        if (!cache){\r\n\r\n            cache = this.gl.getUniformLocation(this.program, uni);\r\n            if (!cache) console.error(\"Uniform: can not get locate of \" + uni);\r\n\r\n            this.uniformLocationCache[uni] = cache;\r\n\r\n            return cache;\r\n        }\r\n\r\n        // 搜索到返回\r\n        else return cache;\r\n\r\n    }\r\n\r\n    /**\r\n     * 使用程序\r\n     */\r\n    public use(){\r\n        this.gl.useProgram(this.program);\r\n        return this;\r\n    }\r\n}","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\r\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {ReadonlyMat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to translate\r\n * @param {ReadonlyVec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyVec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {ReadonlyVec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {ReadonlyQuat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {ReadonlyVec3} v Translation vector\r\n * @param {ReadonlyVec3} s Scaling vector\r\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {ReadonlyQuat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nexport function perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nexport function ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {ReadonlyVec3} eye Position of the viewer\r\n * @param {ReadonlyVec3} center Point the viewer is looking at\r\n * @param {ReadonlyVec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {ReadonlyMat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {ReadonlyMat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {ReadonlyMat4} a the first operand\r\n * @param {ReadonlyMat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyMat4} a The first matrix.\r\n * @param {ReadonlyMat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {ReadonlyVec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the first operand\r\n * @param {ReadonlyVec3} b the second operand\r\n * @param {ReadonlyVec3} c the third operand\r\n * @param {ReadonlyVec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec3} a the vector to transform\r\n * @param {ReadonlyQuat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {ReadonlyVec3} a The vec3 point to rotate\r\n * @param {ReadonlyVec3} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec3} out\r\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {ReadonlyVec3} a The first operand\r\n * @param {ReadonlyVec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec3} a The first vector.\r\n * @param {ReadonlyVec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {ReadonlyVec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {ReadonlyVec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the first operand\r\n * @param {ReadonlyVec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {ReadonlyVec2} a the vector to transform\r\n * @param {ReadonlyMat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {ReadonlyVec2} a The vec2 point to rotate\r\n * @param {ReadonlyVec2} b The origin of the rotation\r\n * @param {Number} rad The angle of rotation in radians\r\n * @returns {vec2} out\r\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {ReadonlyVec2} a The first operand\r\n * @param {ReadonlyVec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {ReadonlyVec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {ReadonlyVec2} a The first vector.\r\n * @param {ReadonlyVec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nexport var len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nexport var sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nexport var mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nexport var div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nexport var dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nexport var sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nexport var sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as M from 'gl-matrix';\r\nimport { GLCanvas } from './GLCanvas';\r\n\r\nexport {Camera};\r\n\r\n/**\r\n * 摄像机\r\n */\r\nclass Camera{\r\n\r\n    private canvas:GLCanvas;\r\n\r\n    /**\r\n     * 视点\r\n     */\r\n    public eye:M.vec3;\r\n\r\n    /**\r\n     * 目标\r\n     */\r\n    public target:M.vec3;\r\n\r\n     /**\r\n      * 镜头旋转方向\r\n      */\r\n    public up:M.vec3;\r\n\r\n    /**\r\n     * 视野大小\r\n     */\r\n    public range:number = Math.PI / 9;\r\n\r\n    /**\r\n     * 画布宽高比例\r\n     */\r\n    public ratio:number = 1.;\r\n\r\n    /**\r\n     * 进远平面距离\r\n     */\r\n    public nearFar:M.vec2;\r\n\r\n    /**\r\n     * 观察者矩阵\r\n     */\r\n    public viewMat:M.mat4;\r\n\r\n    /**\r\n     * 观察者矩阵\r\n     */\r\n    public projectionMat:M.mat4;\r\n\r\n    /**\r\n     * 变换矩阵\r\n     */\r\n    public transformMat:M.mat4;\r\n\r\n    /**\r\n     * 逆变换矩阵\r\n     */\r\n    public transformNMat:M.mat4;\r\n\r\n    /**\r\n     * 构造函数设置初始值\r\n     */\r\n    public constructor(canvas:GLCanvas) {\r\n\r\n        this.canvas = canvas;\r\n\r\n        // 设置全部参数的初始值\r\n        this.eye = M.vec3.create();\r\n        this.target = M.vec3.create();\r\n        this.up = M.vec3.create();\r\n        this.nearFar = M.vec2.create();\r\n        this.viewMat = M.mat4.create();\r\n\r\n        this.projectionMat = M.mat4.create();\r\n        this.transformMat = M.mat4.create();\r\n        this.transformNMat = M.mat4.create();\r\n\r\n        \r\n\r\n        // 设置视点初始值\r\n        M.vec3.set(this.eye, 0., 0., 10.);\r\n\r\n        // 设置向上方向\r\n        M.vec3.set(this.up, 0., 1., 0.);\r\n\r\n        // 设置进远平面\r\n        M.vec2.set(this.nearFar, 0.001, 1000.);\r\n\r\n        // 射线追踪临时变量\r\n        this.tempRayP = M.vec3.create();\r\n        this.tempRayO = M.vec3.create();\r\n        this.tempRayPoint = M.vec3.create();\r\n    }\r\n\r\n    private tempRayPoint:M.vec3;\r\n    private tempRayP:M.vec3;\r\n    private tempRayO:M.vec3;\r\n\r\n    /**\r\n     * 生成变换需要的全部矩阵\r\n     */\r\n    public generateMat(){\r\n\r\n        // 更新 ratio\r\n        this.ratio = this.canvas.ratio;\r\n\r\n        // 更新观察者矩阵\r\n        M.mat4.lookAt(this.viewMat, this.eye, this.target, this.up);\r\n\r\n        // 更新投影矩阵\r\n        M.mat4.perspective(this.projectionMat,\r\n            this.range, this.ratio, this.nearFar[0], this.nearFar[1]);\r\n\r\n        // 更新变换矩阵\r\n        M.mat4.multiply(this.transformMat, this.projectionMat, this.viewMat);\r\n\r\n        // 计算逆矩阵\r\n        M.mat4.invert(this.transformNMat, this.transformMat);\r\n    }\r\n\r\n    /**\r\n     * X 轴旋转角度\r\n     * [0 - 360)\r\n     */\r\n    public angleX:number = 90;\r\n\r\n    /**\r\n     * Y 轴旋转角度\r\n     * [90 - -90]\r\n     */\r\n    public angleY:number = 0;\r\n\r\n    /**\r\n     * 通过角度设置视点\r\n     */\r\n    public setEyeFromAngle(){\r\n\r\n        // 平移至原点\r\n        M.vec3.sub(this.eye, this.eye, this.target);\r\n\r\n        // 计算视点距离\r\n        let dis = M.vec3.length(this.eye);\r\n\r\n        // 计算方向角\r\n        let anDir = M.vec3.create();\r\n\r\n        // 设置水平旋转坐标\r\n        let dx = Math.cos(this.angleX * Math.PI / 180);\r\n        let dz = Math.sin(this.angleX * Math.PI / 180);\r\n\r\n        // 计算垂直旋转坐标\r\n        let dv = Math.cos(this.angleY * Math.PI / 180);\r\n        let dy = Math.sin(this.angleY * Math.PI / 180);\r\n\r\n        // 合成\r\n        M.vec3.set(anDir,\r\n            dx * dv * dis,\r\n            dy * dis,\r\n            dz * dv * dis\r\n        );\r\n\r\n        // 赋值\r\n        M.vec3.copy(this.eye, anDir);\r\n\r\n        // 平移回视点\r\n        M.vec3.add(this.eye, this.eye, this.target);\r\n    }\r\n\r\n    /**\r\n     * 控制灵敏度\r\n     */\r\n    public sensitivity:number = .5;\r\n\r\n    /**\r\n     * 摄像机控制函数\r\n     */\r\n    public ctrl(x:number, y:number) {\r\n\r\n        this.angleX += x * this.sensitivity;\r\n        this.angleY += y * this.sensitivity;\r\n\r\n        if (this.angleX > 360) this.angleX = this.angleX - 360;\r\n        if (this.angleX < 0) this.angleX = 360 + this.angleX;\r\n\r\n        if (this.angleY > 90) this.angleY = 90;\r\n        if (this.angleY < -90) this.angleY = -90;\r\n\r\n        this.setEyeFromAngle();\r\n    }\r\n\r\n    /**\r\n     * 射线追踪\r\n     */\r\n    public rayTrack(x:number, y:number):[M.vec3,M.vec3] {\r\n\r\n        // 逆变换\r\n        M.vec3.set(this.tempRayP, x, y, 1);\r\n        M.vec3.transformMat4(this.tempRayP, this.tempRayP, this.transformNMat);\r\n\r\n        M.vec3.set(this.tempRayO, x, y, 0);\r\n        M.vec3.transformMat4(this.tempRayO, this.tempRayO, this.transformNMat);\r\n\r\n        M.vec3.sub(this.tempRayP, this.tempRayP, this.tempRayO);\r\n        M.vec3.normalize(this.tempRayP, this.tempRayP);\r\n\r\n        return [this.tempRayO, this.tempRayP];\r\n    }\r\n\r\n    /**\r\n     * 极限追踪距离\r\n     */\r\n    public EL:number = 1e-5;\r\n\r\n    private scaleRay(D:number, d:number, o:M.vec3, p:M.vec3):M.vec3 {\r\n\r\n        // 限制 d\r\n        if (d < this.EL) d = this.EL;\r\n\r\n        let len = D / d;\r\n\r\n        this.tempRayPoint[0] = o[0] + p[0] * len;\r\n        this.tempRayPoint[1] = o[1] + p[1] * len;\r\n        this.tempRayPoint[2] = o[2] + p[2] * len;\r\n\r\n        return this.tempRayPoint;\r\n    }\r\n\r\n    /**\r\n     * 计算射线与 XY 平面焦点\r\n     * @param o 射线原点\r\n     * @param p 射线方向\r\n     * @param k 交点距离\r\n     */\r\n    public intersectionLineXYPlant(o:M.vec3, p:M.vec3, k:number = 0):M.vec3 {\r\n\r\n        let d = Math.abs(p[2] - k);\r\n        let D = Math.abs(o[2] - k);\r\n\r\n        return this.scaleRay(D, d, o, p);\r\n    }\r\n\r\n    /**\r\n     * 计算射线与 XZ 平面焦点\r\n     * @param o 射线原点\r\n     * @param p 射线方向\r\n     * @param k 交点距离\r\n     */\r\n    public intersectionLineXZPlant(o:M.vec3, p:M.vec3, k:number = 0):M.vec3 {\r\n\r\n        let d = Math.abs(p[1] - k);\r\n        let D = Math.abs(o[1] - k);\r\n\r\n        return this.scaleRay(D, d, o, p);\r\n    }\r\n\r\n    /**\r\n     * 计算射线与 YZ 平面焦点\r\n     * @param o 射线原点\r\n     * @param p 射线方向\r\n     * @param k 交点距离\r\n     */\r\n    public intersectionLineYZPlant(o:M.vec3, p:M.vec3, k:number = 0):M.vec3 {\r\n\r\n        let d = Math.abs(p[0] - k);\r\n        let D = Math.abs(o[0] - k);\r\n\r\n        return this.scaleRay(D, d, o, p);\r\n    }\r\n}","/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Stats = function () {\n\n\tvar mode = 0;\n\n\tvar container = document.createElement( 'div' );\n\tcontainer.style.cssText = 'position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000';\n\tcontainer.addEventListener( 'click', function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tshowPanel( ++ mode % container.children.length );\n\n\t}, false );\n\n\t//\n\n\tfunction addPanel( panel ) {\n\n\t\tcontainer.appendChild( panel.dom );\n\t\treturn panel;\n\n\t}\n\n\tfunction showPanel( id ) {\n\n\t\tfor ( var i = 0; i < container.children.length; i ++ ) {\n\n\t\t\tcontainer.children[ i ].style.display = i === id ? 'block' : 'none';\n\n\t\t}\n\n\t\tmode = id;\n\n\t}\n\n\t//\n\n\tvar beginTime = ( performance || Date ).now(), prevTime = beginTime, frames = 0;\n\n\tvar fpsPanel = addPanel( new Stats.Panel( 'FPS', '#0ff', '#002' ) );\n\tvar msPanel = addPanel( new Stats.Panel( 'MS', '#0f0', '#020' ) );\n\n\tif ( self.performance && self.performance.memory ) {\n\n\t\tvar memPanel = addPanel( new Stats.Panel( 'MB', '#f08', '#201' ) );\n\n\t}\n\n\tshowPanel( 0 );\n\n\treturn {\n\n\t\tREVISION: 16,\n\n\t\tdom: container,\n\n\t\taddPanel: addPanel,\n\t\tshowPanel: showPanel,\n\n\t\tbegin: function () {\n\n\t\t\tbeginTime = ( performance || Date ).now();\n\n\t\t},\n\n\t\tend: function () {\n\n\t\t\tframes ++;\n\n\t\t\tvar time = ( performance || Date ).now();\n\n\t\t\tmsPanel.update( time - beginTime, 200 );\n\n\t\t\tif ( time > prevTime + 1000 ) {\n\n\t\t\t\tfpsPanel.update( ( frames * 1000 ) / ( time - prevTime ), 100 );\n\n\t\t\t\tprevTime = time;\n\t\t\t\tframes = 0;\n\n\t\t\t\tif ( memPanel ) {\n\n\t\t\t\t\tvar memory = performance.memory;\n\t\t\t\t\tmemPanel.update( memory.usedJSHeapSize / 1048576, memory.jsHeapSizeLimit / 1048576 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tbeginTime = this.end();\n\n\t\t},\n\n\t\t// Backwards Compatibility\n\n\t\tdomElement: container,\n\t\tsetMode: showPanel\n\n\t};\n\n};\n\nStats.Panel = function ( name, fg, bg ) {\n\n\tvar min = Infinity, max = 0, round = Math.round;\n\tvar PR = round( window.devicePixelRatio || 1 );\n\n\tvar WIDTH = 80 * PR, HEIGHT = 48 * PR,\n\t\t\tTEXT_X = 3 * PR, TEXT_Y = 2 * PR,\n\t\t\tGRAPH_X = 3 * PR, GRAPH_Y = 15 * PR,\n\t\t\tGRAPH_WIDTH = 74 * PR, GRAPH_HEIGHT = 30 * PR;\n\n\tvar canvas = document.createElement( 'canvas' );\n\tcanvas.width = WIDTH;\n\tcanvas.height = HEIGHT;\n\tcanvas.style.cssText = 'width:80px;height:48px';\n\n\tvar context = canvas.getContext( '2d' );\n\tcontext.font = 'bold ' + ( 9 * PR ) + 'px Helvetica,Arial,sans-serif';\n\tcontext.textBaseline = 'top';\n\n\tcontext.fillStyle = bg;\n\tcontext.fillRect( 0, 0, WIDTH, HEIGHT );\n\n\tcontext.fillStyle = fg;\n\tcontext.fillText( name, TEXT_X, TEXT_Y );\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\tcontext.fillStyle = bg;\n\tcontext.globalAlpha = 0.9;\n\tcontext.fillRect( GRAPH_X, GRAPH_Y, GRAPH_WIDTH, GRAPH_HEIGHT );\n\n\treturn {\n\n\t\tdom: canvas,\n\n\t\tupdate: function ( value, maxValue ) {\n\n\t\t\tmin = Math.min( min, value );\n\t\t\tmax = Math.max( max, value );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 1;\n\t\t\tcontext.fillRect( 0, 0, WIDTH, GRAPH_Y );\n\t\t\tcontext.fillStyle = fg;\n\t\t\tcontext.fillText( round( value ) + ' ' + name + ' (' + round( min ) + '-' + round( max ) + ')', TEXT_X, TEXT_Y );\n\n\t\t\tcontext.drawImage( canvas, GRAPH_X + PR, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT, GRAPH_X, GRAPH_Y, GRAPH_WIDTH - PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, GRAPH_HEIGHT );\n\n\t\t\tcontext.fillStyle = bg;\n\t\t\tcontext.globalAlpha = 0.9;\n\t\t\tcontext.fillRect( GRAPH_X + GRAPH_WIDTH - PR, GRAPH_Y, PR, round( ( 1 - ( value / maxValue ) ) * GRAPH_HEIGHT ) );\n\n\t\t}\n\n\t};\n\n};\n\nexport { Stats };\n","import { Stats } from \"stats.js\";\r\n\r\nexport {Clock, LoopFunction};\r\n\r\ntype LoopFunction = (t:number)=>void;\r\n\r\n/**\r\n * 时钟\r\n */\r\nclass Clock {\r\n\r\n    /**\r\n     * 总用时\r\n     */\r\n    private allTime:number = 0;\r\n\r\n    /**\r\n     * 速率\r\n     */\r\n    public speed:number = 1;\r\n\r\n    /**\r\n     * fps监视器\r\n     */\r\n    private stats:Stats;\r\n\r\n    /**\r\n     * 是否使用 Stats\r\n     */\r\n    private isStatsOn:boolean = false;\r\n\r\n    /**\r\n     * 开启 fps 监视\r\n     */\r\n    public useStats():this {\r\n        \r\n        this.stats = new Stats();\r\n\r\n        this.isStatsOn = true;\r\n        this.stats.showPanel(0);\r\n\r\n        document.body.appendChild(this.stats.dom);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 主函数\r\n     */\r\n    private fn:LoopFunction;\r\n\r\n    /**\r\n     * 动画循环\r\n     * @param fn 循环函数\r\n     */\r\n    public constructor(fn?:LoopFunction){\r\n\r\n        this.fn = fn ?? ((t)=>{});\r\n\r\n    }\r\n\r\n    /**\r\n     * 设置函数\r\n     * @param fn 循环函数\r\n     */\r\n    public setFn(fn:LoopFunction){\r\n\r\n        this.fn = fn;\r\n\r\n    }\r\n\r\n    /**\r\n     * 开始\r\n     */\r\n    public run(){\r\n\r\n        // 主循环\r\n        let loop = (t:number)=>{\r\n\r\n            if (this.isStatsOn) this.stats.begin();\r\n\r\n            // 时差\r\n            let dur = (t - this.allTime) * this.speed / 1000;\r\n\r\n            // 检测由于失焦导致的丢帧\r\n            if (t - this.allTime < 100) {\r\n                this.fn(dur);\r\n            }\r\n\r\n            // 更新时间\r\n            this.allTime = t;\r\n\r\n            if (this.isStatsOn) this.stats.end();\r\n\r\n            // 继续循环\r\n            requestAnimationFrame(loop);\r\n\r\n        }\r\n\r\n        // 获取时间\r\n        requestAnimationFrame((t)=>{\r\n\r\n            // 记录初始时间\r\n            this.allTime = t;\r\n\r\n            // 开启循环\r\n            requestAnimationFrame(loop);\r\n        })\r\n    }\r\n}","import { GLCanvas, GLCanvasOption } from \"./GLCanvas\";\r\nimport {GLContex} from \"./GLType\";\r\n\r\nexport {GLRenderer}\r\n\r\n/**\r\n * WEBGl 渲染器\r\n * 控制 GL 对象的渲染\r\n */\r\nclass GLRenderer {\r\n\r\n    /**\r\n     * 使用的画布\r\n     */\r\n    public canvas: GLCanvas;\r\n\r\n    /**\r\n     * GL 上下文\r\n     */\r\n    public gl:GLContex;\r\n\r\n    /**\r\n     * WebGL 版本\r\n     */\r\n    public glVersion:number = 0;\r\n\r\n    /**\r\n     * 获取上下文\r\n     */\r\n    public getContext(){\r\n\r\n        // 尝试 webgl2\r\n        this.gl = this.canvas.can.getContext(\"webgl2\");\r\n        if (this.gl) {\r\n            this.glVersion = 2;\r\n            console.log(\"Render: Using WebGL2 :)\");\r\n        } else {\r\n\r\n            // 尝试 WebGL1\r\n            this.gl = this.canvas.can.getContext(\"webgl\");\r\n            if (this.gl){\r\n                this.glVersion = 1;\r\n                console.log(\"Render: Using WebGL1 :(\");\r\n            }\r\n\r\n            // 获取失败发出警告\r\n            else {\r\n                console.error(\"Render: Not supported WebGL!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 清屏颜色\r\n     */\r\n    public cleanColor:[number,number,number,number] = [.92, .92, .92, 1.];\r\n\r\n    /**\r\n     * 清屏\r\n     */\r\n    public clean(){\r\n        this.gl.clearColor(\r\n            this.cleanColor[0], this.cleanColor[1],\r\n            this.cleanColor[2], this.cleanColor[3]\r\n        );\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\r\n    }\r\n\r\n    /**\r\n     * 构造\r\n     */\r\n    public constructor(canvas?:HTMLCanvasElement, canvasOp?:GLCanvasOption){\r\n\r\n        this.canvas = new GLCanvas(canvas, canvasOp);\r\n\r\n        // 获取上下文\r\n        this.getContext();\r\n    }\r\n\r\n}","import { mat4, vec3 } from \"gl-matrix\";\r\nimport { GLProgram } from \"../core/GLProgram\";\r\n\r\nexport { BasicsShader }\r\n\r\n/**\r\n * 基础绘制 Shader\r\n * @class BasicsShader\r\n */\r\n class BasicsShader extends GLProgram{\r\n\r\n    public override onload() {\r\n\r\n        // 顶点着色\r\n        const vertex = `\r\n        attribute vec3 vPos;\r\n        \r\n        uniform vec3 r;\r\n        uniform mat4 mvp;\r\n        uniform vec3 pos;\r\n\r\n        void main(){\r\n            gl_Position = mvp * vec4(vPos * r + pos, 1.);\r\n        }\r\n        `;\r\n\r\n        // 片段着色\r\n        const fragment = `\r\n        precision lowp float;\r\n        \r\n        uniform vec3 color;\r\n    \r\n        void main(){\r\n            gl_FragColor = vec4(color, 1.);\r\n        }\r\n        `;\r\n\r\n        // 保存代码\r\n        this.setSource(vertex, fragment);\r\n\r\n        // 编译\r\n        this.compile();\r\n    }\r\n\r\n    /**\r\n     * 传递半径数据\r\n     */\r\n    public r(r:number[]|vec3){\r\n        this.gl.uniform3fv(\r\n            this.uniformLocate(\"r\"), r\r\n        );\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 坐标\r\n     */\r\n    public pos(r:number[]|vec3){\r\n        this.gl.uniform3fv(\r\n            this.uniformLocate(\"pos\"), r\r\n        );\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 传递半径数据\r\n     */\r\n    public mvp(mat:mat4, transpose:boolean = false){\r\n        this.gl.uniformMatrix4fv(\r\n            this.uniformLocate(\"mvp\"), transpose, mat\r\n        );\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * 传递半径数据\r\n     * @param {vec3|Number[]} rgb\r\n     */\r\n    public color(rgb:number[]|vec3){\r\n        this.gl.uniform3fv(\r\n            this.uniformLocate(\"color\"), rgb\r\n        );\r\n    }\r\n}","import { BasicsShader, Camera, Object3D } from \"../Rainbow\";\r\nimport { GLContex } from \"../core/GLType\";\r\n\r\nexport { TestAxis };\r\n\r\nclass TestAxis implements Object3D{\r\n\r\n    /**\r\n     * 坐标轴数据\r\n     */\r\n    static AXIS_VER_DATA = new Float32Array([\r\n        0,0,0,  1,0,0,\r\n        0,0,0,  0,1,0,\r\n        0,0,0,  0,0,1\r\n    ]);\r\n\r\n    private axisVertexBuffer:WebGLBuffer;\r\n\r\n    protected onload() {\r\n\r\n        // 创建缓冲区\r\n        this.axisVertexBuffer = this.gl.createBuffer();\r\n\r\n        // 绑定缓冲区\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.axisVertexBuffer);\r\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, TestAxis.AXIS_VER_DATA, this.gl.STATIC_DRAW);\r\n    }\r\n\r\n    /**\r\n     * GL 上下文\r\n     */\r\n    protected gl:GLContex;\r\n\r\n     /**\r\n      * 创建编译 shader\r\n      */\r\n    public constructor(gl:GLContex){\r\n         this.gl = gl;\r\n         this.onload();\r\n     }\r\n\r\n    /**\r\n     * 绘制半径\r\n     */\r\n    public r:number = 1;\r\n\r\n    public pos:number[] = [0, 0, 0];\r\n\r\n    /**\r\n     * 绘制坐标轴\r\n     */\r\n    public draw(camera:Camera, shader:BasicsShader){\r\n\r\n        // 使用程序\r\n        shader.use();\r\n\r\n        // 绑定缓冲区\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.axisVertexBuffer);\r\n\r\n        // 指定指针数据\r\n        this.gl.vertexAttribPointer(\r\n            shader.attribLocate(\"vPos\"),\r\n            3, this.gl.FLOAT, false, 0, 0);\r\n\r\n        // mvp参数传递\r\n        shader.mvp(camera.transformMat);\r\n\r\n        // 半径传递\r\n        shader.r([this.r, this.r, this.r]);\r\n        shader.pos(this.pos);\r\n\r\n        // 绘制 X 轴\r\n        shader.color([1, 0, 0]);\r\n        this.gl.drawArrays(this.gl.LINES, 0, 2);\r\n\r\n        // 绘制 Y 轴\r\n        shader.color([0, 1, 0]);\r\n        this.gl.drawArrays(this.gl.LINES, 2, 2);\r\n\r\n        // 绘制 Z 轴\r\n        shader.color([0, 0, 1]);\r\n        this.gl.drawArrays(this.gl.LINES, 4, 2);\r\n    }\r\n}","import { Object3D } from \"../core/Object3D\";\r\nimport { GLContex } from \"../core/GLType\";\r\nimport { Camera } from \"../Rainbow\";\r\nimport { BasicsShader } from \"../shader/BasicShader\";\r\n\r\nexport {TestBox}\r\n\r\nclass TestBox implements Object3D{\r\n\r\n    /**\r\n     * 立方体数据\r\n     */\r\n    static CUBE_VER_DATA = new Float32Array([\r\n        1,1,1,   -1,1,1,   -1,1,-1,    1,1,-1,\r\n        1,-1,1,  -1,-1,1,  -1,-1,-1,   1,-1,-1\r\n    ]);\r\n\r\n    /**\r\n     * 立方体线段绘制索引\r\n     */\r\n    static CUBE_ELE_DATA = new Uint16Array([\r\n        0,1,  1,2,  2,3,  3,0,\r\n        4,5,  5,6,  6,7,  7,4,\r\n        0,4,  1,5,  2,6,  3,7\r\n    ]);\r\n\r\n    protected onload() {\r\n\r\n        // 创建缓冲区\r\n        this.cubeVertexBuffer = this.gl.createBuffer();\r\n        this.cubeElementBuffer = this.gl.createBuffer();\r\n\r\n        // 绑定缓冲区\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.cubeVertexBuffer);\r\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, TestBox.CUBE_VER_DATA, this.gl.STATIC_DRAW);\r\n\r\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.cubeElementBuffer);\r\n        this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, TestBox.CUBE_ELE_DATA, this.gl.STATIC_DRAW);\r\n    }\r\n\r\n    /**\r\n     * GL 上下文\r\n     */\r\n    protected gl:GLContex;\r\n\r\n    /**\r\n     * 创建编译 shader\r\n     */\r\n    public constructor(gl:GLContex){\r\n        this.gl = gl;\r\n        this.onload();\r\n    }\r\n    \r\n    private cubeVertexBuffer:WebGLBuffer;\r\n    private cubeElementBuffer:WebGLBuffer;\r\n\r\n    /**\r\n     * 绘制半径\r\n     */\r\n    private r:[number,number,number] = [1,1,1];\r\n\r\n    /**\r\n     * 绘制立方体\r\n     */\r\n    public draw(camera:Camera, shader:BasicsShader){\r\n\r\n        // 使用程序\r\n        shader.use();\r\n\r\n        // 绑定缓冲区\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.cubeVertexBuffer);\r\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.cubeElementBuffer);\r\n\r\n        // 指定指针数据\r\n        this.gl.vertexAttribPointer(\r\n            shader.attribLocate(\"vPos\"),\r\n            3, this.gl.FLOAT, false, 0, 0);\r\n\r\n        // mvp参数传递\r\n        shader.mvp(camera.transformMat);\r\n\r\n        // 半径传递\r\n        shader.r(this.r);\r\n        shader.pos([0, 0, 0]);\r\n\r\n        // 指定颜色\r\n        shader.color([.2, .2, .2]);\r\n\r\n        // 开始绘制\r\n        this.gl.drawElements(this.gl.LINES, 24, this.gl.UNSIGNED_SHORT, 0);\r\n    }\r\n}","export {Bezier3, SmoothTool}\r\n\r\n/**\r\n * 三阶贝塞尔曲线\r\n */\r\nclass Bezier3 {\r\n    \r\n    public pointA:number[];\r\n    public pointB:number[];\r\n\r\n    public handA:number[];\r\n    public handB:number[];\r\n\r\n    public len:number = 0;\r\n\r\n    private tempVal:number[];\r\n\r\n    /**\r\n     * 设置单一值\r\n     */\r\n    public setSimpVal(a:number, b:number, c:number, d:number){\r\n\r\n        this.pointA.length = 0;\r\n        this.pointB.length = 0;\r\n        this.handA.length = 0;\r\n        this.handB.length = 0;\r\n\r\n        this.pointA.push(a);\r\n        this.pointB.push(b);\r\n        this.handA.push(c);\r\n        this.handB.push(d);\r\n    }\r\n\r\n    /**\r\n     * 获取贝塞尔插值\r\n     * @param t \r\n     * @returns \r\n     */\r\n    public bezierM(t:number){\r\n\r\n        // 长度搜索\r\n        if (this.len) this.len = Math.min(\r\n            this.pointA.length,\r\n            this.pointB.length,\r\n            this.handA.length,\r\n            this.handB.length\r\n        );\r\n\r\n        // 插值计算\r\n        this.tempVal = SmoothTool.bezier3(t);\r\n\r\n        // 生成插值\r\n        let res = [];\r\n        for (let i = 0; i < this.len; i++) {\r\n            res[i] = \r\n            this.pointA[i] * this.tempVal[0] +\r\n            this.handA[i] * this.tempVal[1] +\r\n            this.handB[i] * this.tempVal[2] +\r\n            this.pointB[i] * this.tempVal[3]\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * 平滑插值工具\r\n */\r\nclass SmoothTool {\r\n\r\n    /**\r\n     * 三阶贝塞尔插值\r\n     * @param t 进度\r\n     */\r\n    static bezier3(t:number):number[] {\r\n        return [\r\n            (1 - t) ** 3,\r\n            3 * t * (1 - t) ** 2,\r\n            3 * t ** 2 * (1 - t),\r\n            t ** 3\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * 生成贝塞尔点集\r\n     * @param val 一维稀疏数组\r\n     * @param w 插值尾值\r\n     * @param smooth 平滑程度\r\n     * @param f 插值频率\r\n     */\r\n    static genSmoothLine(val:number[][], w:boolean = false, smooth:number = 1, f:number = 1) {\r\n\r\n        let res:number[] = [];\r\n\r\n        let bz = new Bezier3();\r\n\r\n        for (let i = 0; i < val.length - 1; i++) {\r\n\r\n            bz.pointA = val[i];\r\n            bz.pointB = val[i + 1];\r\n            \r\n            bz.handA = [bz.pointA[0] + smooth, bz.pointA[1]];\r\n            bz.handB = [bz.pointB[0] - smooth, bz.pointB[1]];\r\n\r\n            bz.len = 2;\r\n\r\n            // console.log(bz);\r\n\r\n            // 计算插值次数\r\n            const num = (bz.pointB[0] - bz.pointA[0]) / f;\r\n\r\n            for(let j = 0; j < num; j++) {\r\n\r\n                // console.log(num, j, j / num);\r\n\r\n                res.push(bz.bezierM(j / num)[1]);\r\n            }\r\n\r\n        }\r\n\r\n        if (w) res.push(val[val.length - 1][1]);\r\n\r\n        return res;\r\n\r\n    }\r\n\r\n    /**\r\n     * 指定长度的区间内生成固定点\r\n     * 随机距离随机摆动\r\n     * @param len 覆盖程度\r\n     * @param num 点数量\r\n     * @param pow 摆动幅度\r\n     */\r\n    static genRandomPointR(len:number,num:number,pow:number):number[][] {\r\n        \r\n        let res = [];\r\n\r\n        for (let i = 0; i < num; i++) {\r\n            res.push([\r\n                Math.random(),\r\n                (Math.random() - .5) * 2 * pow\r\n            ]);\r\n        }\r\n\r\n        // 排序\r\n        res = res.sort((a, b) => a[0] - b[0]);\r\n\r\n        let min = res[0][0];\r\n        let max = res[res.length - 1][0];\r\n        let range = max - min;\r\n\r\n        // 最小归一化\r\n        for (let i = 0; i < res.length; i++) {\r\n            res[i][0] = Math.floor((res[i][0] - min) * len / range);\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * 指定长度的区间内生成固定点\r\n     * 固定距离随机摆动\r\n     * @param len \r\n     * @param num \r\n     * @param pow \r\n     */\r\n    static genRandomPointM(len:number,num:number,pow:number):number[][] {\r\n\r\n        let res = [];\r\n\r\n        for (let i = 0; i < num; i++) {\r\n            res.push([\r\n                Math.floor(i * len / (num - 1)),\r\n                (Math.random() - .5) * 2 * pow\r\n            ]);\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * 随机生成数字\r\n     * @param min 最小值\r\n     * @param max 最大值\r\n     */\r\n    static random(min:number, max:number):number {\r\n        return Math.random() * (max - min) + min;\r\n    }\r\n}","import { Object3D } from \"../core/Object3D\";\r\nimport { Camera } from \"../core/Camera\";\r\nimport { BasicsShader } from \"../shader/BasicShader\";\r\nimport { GLContex } from \"../core/GLType\";\r\nimport { SmoothTool } from \"../utils/SmoothTool\";\r\n\r\nexport { Planet }\r\n\r\nclass Planet implements Object3D {\r\n\r\n    /**\r\n     * GL 上下文\r\n     */\r\n    protected gl:GLContex;\r\n\r\n    private vertexBuffer:WebGLBuffer;\r\n    private pointNum:number;\r\n\r\n\r\n    static readonly NORMAL_COLOR:number[] = \r\n    [111 / 255, 149 / 255, 191 / 255];\r\n\r\n    /**\r\n     * 加载\r\n     */\r\n    public constructor(gl:GLContex){\r\n        this.gl = gl;\r\n\r\n        // 随机颜色\r\n        let colorDep = SmoothTool.random(0.98, 1.02);\r\n        this.color = [\r\n            colorDep * Planet.NORMAL_COLOR[0],\r\n            colorDep * Planet.NORMAL_COLOR[1],\r\n            colorDep * Planet.NORMAL_COLOR[2]\r\n        ];\r\n\r\n        // 生成多边形数据\r\n        let randSeed = Math.random();\r\n        let d = this.genBuffer(\r\n            .35 + randSeed * .3, \r\n            .03 + randSeed * .03 + Math.random() * .01, \r\n            Math.floor(SmoothTool.random(5, 9)),\r\n            .8 + randSeed * .3 + Math.random() * .1\r\n        );\r\n\r\n        this.vertexBuffer = this.gl.createBuffer();\r\n        this.pointNum = d.length / 3;\r\n        \r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        this.gl.bufferData(this.gl.ARRAY_BUFFER, new Float32Array(d), this.gl.STATIC_DRAW);\r\n    }\r\n\r\n    /**\r\n     * 坐标\r\n     */\r\n    public pos:[number,number,number] = [0, 0, 0];\r\n\r\n    /**\r\n     * 生成网格\r\n     * @param r 半径\r\n     * @param p 半径浮动\r\n     * @param f 浮动频率\r\n     * @param o 平滑程度\r\n     * @param e 精度\r\n     */\r\n    public genBuffer(\r\n        r:number, \r\n        p:number, \r\n        f:number, \r\n        o:number = 1,\r\n        e:number = Math.PI / 180\r\n    ):number[] {\r\n\r\n        const dir:number[] = [0, 0];\r\n        const res:number[] = [0, 0, 0];\r\n\r\n        // 点个数\r\n        let num = Math.PI * 2 / e;\r\n\r\n        // 生成抖动数据\r\n        let d = SmoothTool.genRandomPointM(num, f, p);\r\n\r\n        // 闭合数据\r\n        d[d.length - 1][1] = d[0][1];\r\n\r\n        // 插值\r\n        let m = SmoothTool.genSmoothLine(d, false, o);\r\n\r\n        for (let i = 0; i < m.length; i++) {\r\n\r\n            // 当前角度\r\n            let th = i * 2 * Math.PI / m.length;\r\n\r\n            // 参数方程求解\r\n            dir[0] = Math.cos(th);\r\n            dir[1] = Math.sin(th);\r\n\r\n            res.push(dir[0] * (r + m[i]));\r\n            res.push(dir[1] * (r + m[i]));\r\n            res.push(0);\r\n        }\r\n\r\n        // 连接起始点\r\n        res.push(res[3]);\r\n        res.push(res[4]);\r\n        res.push(res[5]);\r\n\r\n        return res;\r\n    }\r\n\r\n    public color:number[];\r\n    \r\n    public draw(camera:Camera, shader:BasicsShader){\r\n\r\n        // 使用程序\r\n        shader.use();\r\n\r\n        // 绑定缓冲区\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.vertexBuffer);\r\n\r\n        // 指定指针数据\r\n        this.gl.vertexAttribPointer(\r\n            shader.attribLocate(\"vPos\"),\r\n            3, this.gl.FLOAT, false, 0, 0);\r\n\r\n        // mvp参数传递\r\n        shader.mvp(camera.transformMat);\r\n\r\n        // 半径传递\r\n        shader.color(this.color);\r\n        shader.r([1, 1, 1]);\r\n        shader.pos([0, 0, 0]);\r\n\r\n        // 开始绘制\r\n        this.gl.drawArrays(this.gl.TRIANGLE_FAN, 0, this.pointNum);\r\n    }\r\n}"],"names":["Polyfill","create","glMatrix.ARRAY_TYPE","glMatrix.EPSILON","set","M.vec3.create","M.vec2.create","M.mat4.create","M.vec3.set","M.vec2.set","M.mat4.lookAt","M.mat4.perspective","M.mat4.multiply","M.mat4.invert","M.vec3.sub","M.vec3.length","M.vec3.copy","M.vec3.add","M.vec3.transformMat4","M.vec3.normalize"],"mappings":"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C,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;EACtD,EAAE,GAAG,CA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G,EAAE,GAAG,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;EACrD,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACb,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;EACrD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;EACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;EACtD,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACb,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACb,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACb,EAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACb,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;EACtD,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;EACtD,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"}